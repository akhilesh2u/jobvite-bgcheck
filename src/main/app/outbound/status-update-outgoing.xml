<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking" xmlns:mulexml="http://www.mulesoft.org/schema/mule/xml" xmlns:json="http://www.mulesoft.org/schema/mule/json"
	xmlns:metadata="http://www.mulesoft.org/schema/mule/metadata" xmlns:dw="http://www.mulesoft.org/schema/mule/ee/dw" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:spring="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.mulesoft.org/schema/mule/json http://www.mulesoft.org/schema/mule/json/current/mule-json.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/ee/dw http://www.mulesoft.org/schema/mule/ee/dw/current/dw.xsd
http://www.mulesoft.org/schema/mule/xml http://www.mulesoft.org/schema/mule/xml/current/mule-xml.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd">

    <flow name="post:/jobvite/statusupdate:application/json:jobvite-bgcheck-config">
        <flow-ref name="status-update-outgoing-processing" doc:name="status-update-outgoing-processing"/>
    </flow>

    <sub-flow name="status-update-outgoing-processing" >
        <set-variable variableName="requestTimeStamp" value="#[server.nanoTime()]" doc:name="Inbound Request Timestamp"/>
        <set-variable variableName="requestorJson" value="#[message.inboundProperties.requestor]" mimeType="application/json" doc:name="Set Requestor from Header"/>
        <dw:transform-message doc:name="Transform Requestor Header to Object">
            <dw:set-variable variableName="requestorHeaderJson"><![CDATA[%dw 1.0
%output application/java
---
flowVars.requestorJson]]></dw:set-variable>
        </dw:transform-message>
		<logger message="ReqCorrelationId=  SessionCorrelationId= FlowName=#[flow.Name] NumberOfHeaders=#[message.inboundProperties.size()] PayloadStringSize=#[message.payload != null ? payload : 0] URILength=#[message.inboundProperties['http.request.uri']] Message='Request passed apiKitvalidation and entered flow'"
		        level="INFO" category="com.deverus.tempbgchk.info.httpin" doc:name="INFO Logger for transaction tracking"/>	
		<logger message="ReqCorrelationId=  SessionCorrelationId= FlowName=#[flow.Name] HTTPMethod=#[message.inboundProperties.'http.method'] RequestUri=#[mesage.inboundProperties['http.request.uri']] FlowVars=#[flowVars] Payload=#[payload] Message='Request passed apiKitvalidation and entered flow'"
		        level="DEBUG" category="com.deverus.tempbgchk.debug.request.httpin" doc:name="DEBUG Logger for daignostics"/>
        <dw:transform-message doc:name="Transform Verocity format to Jobvite" metadata:id="b35aa25e-19ac-47dc-9406-1e06b9e5765b">
            <dw:input-payload mimeType="application/json"/>
            <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
{
	candidate: {
		application: {
			eId: payload.refId,
			workflowState: flowVars.requestorHeaderJson.partnerMetadata.reportWflowstate,
			customField: [{
				key: flowVars.requestorHeaderJson.partnerMetadata.reportUrlKey,
				value: payload.reportUrl
			},
			{
				key: flowVars.requestorHeaderJson.partnerMetadata.reportStatusKey,
				value: payload.status
			}]
		}
	}
}]]></dw:set-payload>
        </dw:transform-message>

        <http:request config-ref="invoke_jobvite_statusupdate_API" path="${jobvite.statusupdate.api.path}" method="PUT" doc:name="Invoke Jobvite Status Update API" >
            
            <http:request-builder>
            
                <http:header headerName="Content-Type" value="application/json"/>
                

            </http:request-builder>
        </http:request>

        
<!--         <http:request config-ref="invoke_resetContentType_API" path="testresponse" method="POST" doc:name="Invoke Reset Content Type API">
            <http:request-builder>
                <http:header headerName="Content-Type" value="application/xml"/>
         </http:request-builder>
		</http:request>
 -->        <!-- <parse-template location="C:\Deverus\tempworks-bgcheck\src\main\api\schemas\inboundResponseFormat.xml" doc:name="Parse Template" mimeType="text/xml"/> -->
        
        
        <!-- <set-property propertyName="content-type" doc:name="Property" mimeType="text/xml" value="text/xml; charset=windows-1252"/> -->
		<!-- <message-properties-transformer name="contentTypeTextXML" doc:name="Message Properties"  overwrite="true" mimeType="text/xml">
		   <add-message-property key="Content-Type" value="text/xml" />
		</message-properties-transformer> -->

        <set-variable variableName="responseTimeStamp" value="#[server.nanoTime()]" doc:name="Outbound Respons Timestamp"/>	
		<logger message="ReqCorrelationId=  SessionCorrelationId= FlowName=#[flow.Name] ProcessingTimeStamp=#[(flowVars.requestTimeStamp - flowVars.responseTimeStamp)/1000000] HttpStatusCode= #[message.outboundProperties['http.status']] NumberOfHeaders=#[message.inboundProperties.size()]   Total Message='Transformed response going out of flow'"
		        level="INFO" category="com.deverus.tempbgchk.info.response.success" doc:name="INFO Logger for transaction tracking"/>	
		<logger message="ReqCorrelationId=  SessionCorrelationId= FlowName=#[flow.Name] ProcessingTimeStamp=#[(flowVars.requestTimeStamp - flowVars.responseTimeStamp)/1000000] HttpStatusCode= #[message.outboundProperties['http.status']] HTTPMethod=#[message.inboundProperties.'http.method']  FlowVars=#[flowVars] Payload=#[payload] Message='Transformed response going out of flow'"
		        level="DEBUG" category="com.deverus.tempbgchk.debug.response.success" doc:name="DEBUG Logger for daignostics"/>
    
    </sub-flow>
</mule>
