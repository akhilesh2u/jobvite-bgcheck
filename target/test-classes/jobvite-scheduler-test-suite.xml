<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:mock="http://www.mulesoft.org/schema/mule/mock"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:munit="http://www.mulesoft.org/schema/mule/munit" xmlns:spring="http://www.springframework.org/schema/beans" xmlns:core="http://www.mulesoft.org/schema/mule/core" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/mock http://www.mulesoft.org/schema/mule/mock/current/mule-mock.xsd
http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd">
    <munit:config name="munit" doc:name="MUnit configuration"/>
    <spring:beans>
        <spring:import resource="classpath:inbound/jobvite-scheduler.xml"/>
        <spring:import resource="classpath:config/app-config.xml"/>
        <spring:import resource="classpath:exception/process-errors.xml"/>
    </spring:beans>
    <munit:test name="jobvite-scheduler-test-suite-InvokeRequestorAPITest" description="Test">
        <mock:when messageProcessor=".*:.*" doc:name="Mock">
            <mock:with-attributes>
                <mock:with-attribute name="doc:name" whereValue="#['Invoke Requestor API']"/>
            </mock:with-attributes>
            <mock:then-return payload="[{  &quot;apiSecretKey&quot;: &quot;eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ0&quot;,  &quot;partnerMetadata&quot;: {   &quot;api&quot;: &quot;avenue5residential_candidate_api_key&quot;,   &quot;companyId&quot;: &quot;qduaVfww&quot;,   &quot;sc&quot;: &quot;36d25595acdac7c7781ecfadce9c2ee7&quot;,   &quot;requestWflowstate&quot;: &quot;ESS Background Check&quot;,   &quot;statusWflowstate&quot;: &quot;ESS Background Check Status&quot;,   &quot;reportWflowstate&quot;: &quot;ESS Background Check Complete&quot;,   &quot;reportStatusKey&quot;: &quot;ESS Background Check Status&quot;,   &quot;reportUrlKey&quot;: &quot;ESS Background Check Result URL&quot;,   &quot;start&quot;: &quot;1&quot;,   &quot;count&quot;: &quot;50&quot;,   &quot;mappings&quot;: [{    &quot;customFieldLocation&quot;: &quot;application.job.customfield&quot;,    &quot;customFieldKey&quot;: &quot;ESS PackageID&quot;,    &quot;verocityApiFieldName&quot;: &quot;package.packageName&quot;   }]  },  &quot;requestorId&quot;: &quot;1ace18fecb234867a87c03b4d6387bb7&quot;,  &quot;verocityMetadata&quot;: {   &quot;cra&quot;: &quot;craName&quot;,   &quot;integratedPartner&quot;: &quot;Jobvite&quot;,   &quot;integratedPartnerId&quot;: 26,   &quot;mvpId&quot;: 59,   &quot;requestorId&quot;: 1388  } }, {  &quot;apiSecretKey&quot;: &quot;eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9&quot;,  &quot;partnerMetadata&quot;: {   &quot;api&quot;: &quot;avenue5residential_candidate_api_key&quot;,   &quot;companyId&quot;: &quot;qduaVfww&quot;,   &quot;sc&quot;: &quot;36d25595acdac7c7781ecfadce9c2ee7&quot;,   &quot;requestWflowstate&quot;: &quot;ESS Background Check&quot;,   &quot;statusWflowstate&quot;: &quot;ESS Background Check Status&quot;,   &quot;reportWflowstate&quot;: &quot;ESS Background Check Complete&quot;,   &quot;reportStatusKey&quot;: &quot;ESS Background Check Status&quot;,   &quot;reportUrlKey&quot;: &quot;ESS Background Check Result URL&quot;,   &quot;start&quot;: &quot;1&quot;,   &quot;count&quot;: &quot;50&quot;,   &quot;mappings&quot;: [{    &quot;customFieldLocation&quot;: &quot;application.job.customfield&quot;,    &quot;customFieldKey&quot;: &quot;ESS PackageID&quot;,    &quot;verocityApiFieldName&quot;: &quot;package.packageName&quot;   }]  },  &quot;requestorId&quot;: &quot;1ace18fecb234867a87c03b4d6387bb7&quot;,  &quot;verocityMetadata&quot;: {   &quot;cra&quot;: &quot;craName&quot;,   &quot;integratedPartner&quot;: &quot;Jobvite&quot;,   &quot;integratedPartnerId&quot;: 26,   &quot;mvpId&quot;: 59,   &quot;requestorId&quot;: 1388  } }]"/>
        </mock:when>
        <mock:when messageProcessor=".*:.*" doc:name="Mock">
            <mock:with-attributes>
                <mock:with-attribute name="doc:name" whereValue="#['Invoke Jobvite GET API']"/>
            </mock:with-attributes>
            <mock:then-return payload="{  &quot;candidates&quot;: [{    &quot;address&quot;: &quot;123 Market Street&quot;,    &quot;address2&quot;: &quot;&quot;,    &quot;application&quot;: {     &quot;customField&quot;: [],     &quot;eId&quot;: &quot;p3BhEjwn&quot;,     &quot;gender&quot;: &quot;Undefined&quot;,     &quot;hasArtifacts&quot;: true,     &quot;job&quot;: {      &quot;company&quot;: &quot;Avenue5 Residential&quot;,      &quot;customField&quot;: [{       &quot;fieldCode&quot;: &quot;ess_packageid_xbgcvfw8&quot;,       &quot;key&quot;: &quot;ESS PackageID&quot;,       &quot;value&quot;: &quot;Standard Package&quot;      }],      &quot;department&quot;: &quot;CO-31000 - Arvada Station&quot;,      &quot;eId&quot;: &quot;o3DV4fwp&quot;,      &quot;hiringManagers&quot;: [{       &quot;firstName&quot;: &quot;John&quot;,       &quot;lastName&quot;: &quot;Doe&quot;,       &quot;userId&quot;: &quot;skwe5hwV&quot;,       &quot;userName&quot;: &quot;jdoe@deverus.com&quot;      }],      &quot;jobType&quot;: &quot;Full-Time&quot;,      &quot;location&quot;: &quot;Arvada Station&quot;,      &quot;primaryHiringManager&quot;: {       &quot;firstName&quot;: &quot;John&quot;,       &quot;lastName&quot;: &quot;Doe&quot;,       &quot;userId&quot;: &quot;skwe5hwV&quot;,       &quot;userName&quot;: &quot;jdoe@deverus.com&quot;      },      &quot;requisitionId&quot;: &quot;97&quot;,      &quot;subsidiaryId&quot;: &quot;fnV9Vfw6&quot;,      &quot;title&quot;: &quot;Assistant Maintenance Supervisor | Arvada Station&quot;     },     &quot;jobviteChannel&quot;: &quot;Email&quot;,     &quot;lastUpdatedDate&quot;: 1490732480643,     &quot;race&quot;: &quot;Undefined&quot;,     &quot;resume&quot;: {      &quot;content&quot;: &quot;None&quot;,      &quot;format&quot;: &quot;Text&quot;,      &quot;name&quot;: &quot;ExResume.docx&quot;     },     &quot;sentDate&quot;: 1490726774140,     &quot;source&quot;: &quot;Fred Flintstone&quot;,     &quot;sourceType&quot;: &quot;Recruiter&quot;,     &quot;veteranStatus&quot;: &quot;Undefined&quot;,     &quot;workflowState&quot;: &quot;Background Check in Process&quot;    },    &quot;city&quot;: &quot;San Francisco&quot;,    &quot;companyName&quot;: &quot;&quot;,    &quot;country&quot;: &quot;USA&quot;,    &quot;countryCode&quot;: &quot;USA&quot;,    &quot;countryName&quot;: &quot;United States&quot;,    &quot;eId&quot;: &quot;ex6vsiwn&quot;,    &quot;email&quot;: &quot;duck@example.com&quot;,    &quot;firstName&quot;: &quot;Daffy&quot;,    &quot;homePhone&quot;: &quot;+1 999-999-9999&quot;,    &quot;lastName&quot;: &quot;Duck (TEST)&quot;,    &quot;location&quot;: &quot;San Francisco, California United States&quot;,    &quot;mobile&quot;: &quot;+1 999-999-9999&quot;,    &quot;postalCode&quot;: &quot;94122&quot;,    &quot;state&quot;: &quot;California&quot;,    &quot;stateCode&quot;: &quot;CA&quot;,    &quot;stateName&quot;: &quot;California&quot;,    &quot;title&quot;: &quot;&quot;,    &quot;workPhone&quot;: &quot;&quot;,    &quot;workStatus&quot;: &quot;None&quot;   },   {    &quot;address&quot;: &quot;999 Broadway&quot;,    &quot;address2&quot;: &quot;&quot;,    &quot;application&quot;: {     &quot;customField&quot;: [],     &quot;eId&quot;: &quot;p3BhEjwn&quot;,     &quot;gender&quot;: &quot;Undefined&quot;,     &quot;hasArtifacts&quot;: true,     &quot;job&quot;: {      &quot;company&quot;: &quot;Avenue5 Residential&quot;,      &quot;customField&quot;: [{       &quot;fieldCode&quot;: &quot;ess_packageid_xbgcvfw8&quot;,       &quot;key&quot;: &quot;ESS PackageID&quot;,       &quot;value&quot;: &quot;Standard Package&quot;      }],      &quot;department&quot;: &quot;CO-31009 - Midtown Station&quot;,      &quot;eId&quot;: &quot;tnFJ876&quot;,      &quot;hiringManagers&quot;: [{       &quot;firstName&quot;: &quot;Ben&quot;,       &quot;lastName&quot;: &quot;Bear&quot;,       &quot;userId&quot;: &quot;zzzzzz&quot;,       &quot;userName&quot;: &quot;bbear@deverus.com&quot;      }],      &quot;jobType&quot;: &quot;Full-Time&quot;,      &quot;location&quot;: &quot;Midtown Station&quot;,      &quot;primaryHiringManager&quot;: {       &quot;firstName&quot;: &quot;Ben&quot;,       &quot;lastName&quot;: &quot;Bear&quot;,       &quot;userId&quot;: &quot;zzzzzzz&quot;,       &quot;userName&quot;: &quot;jdoe@deverus.com&quot;      },      &quot;requisitionId&quot;: &quot;97&quot;,      &quot;subsidiaryId&quot;: &quot;fnV9Vfw6&quot;,      &quot;title&quot;: &quot;Assistant Maintenance Supervisor | Midtown Station&quot;     },     &quot;jobviteChannel&quot;: &quot;Email&quot;,     &quot;lastUpdatedDate&quot;: 1490732480643,     &quot;race&quot;: &quot;Undefined&quot;,     &quot;resume&quot;: {      &quot;content&quot;: &quot;None&quot;,      &quot;format&quot;: &quot;Text&quot;,      &quot;name&quot;: &quot;ExResume.docx&quot;     },     &quot;sentDate&quot;: 1490726774140,     &quot;source&quot;: &quot;Wilma Flintstone&quot;,     &quot;sourceType&quot;: &quot;Recruiter&quot;,     &quot;veteranStatus&quot;: &quot;Undefined&quot;,     &quot;workflowState&quot;: &quot;Background Check in Process&quot;    },    &quot;city&quot;: &quot;San Francisco&quot;,    &quot;companyName&quot;: &quot;&quot;,    &quot;country&quot;: &quot;USA&quot;,    &quot;countryCode&quot;: &quot;USA&quot;,    &quot;countryName&quot;: &quot;United States&quot;,    &quot;eId&quot;: &quot;p3BhEjwn&quot;,    &quot;email&quot;: &quot;mmouse@example.com&quot;,    &quot;firstName&quot;: &quot;Mickey&quot;,    &quot;homePhone&quot;: &quot;+1 999-999-9999&quot;,    &quot;lastName&quot;: &quot;Mouse (TEST)&quot;,    &quot;location&quot;: &quot;San Francisco, California United States&quot;,    &quot;mobile&quot;: &quot;+1 999-999-9999&quot;,    &quot;postalCode&quot;: &quot;94122&quot;,    &quot;state&quot;: &quot;California&quot;,    &quot;stateCode&quot;: &quot;CA&quot;,    &quot;stateName&quot;: &quot;California&quot;,    &quot;title&quot;: &quot;&quot;,    &quot;workPhone&quot;: &quot;&quot;,    &quot;workStatus&quot;: &quot;None&quot;   }  ],  &quot;total&quot;: 1,  &quot;status&quot;: {   &quot;code&quot;: 200,   &quot;messages&quot;: []  } }"/>
        </mock:when>
        <mock:when messageProcessor=".*:.*" doc:name="Mock">
            <mock:with-attributes>
                <mock:with-attribute name="doc:name" whereValue="#['Invoke Verocity POST API']"/>
            </mock:with-attributes>
            <mock:then-return payload="{ &quot;status&quot;:&quot;success&quot; }"/>
        </mock:when>
    
        <flow-ref name="InvokeRequestorAPI" doc:name="Flow-ref to InvokeRequestorAPI"/>
        <munit:assert-on-equals message="Failed to execute jobvite-scheduler-incoming-test Success Flow test case" expectedValue="{ &quot;status&quot;:&quot;success&quot; }" actualValue="#[payload]" doc:name="Assert Equals"/>
    </munit:test>
    <munit:test name="jobvite-scheduler-test-suite-InvokeRequestorAPITestFailure" description="Test">
        <mock:when messageProcessor=".*:.*" doc:name="Mock">
            <mock:with-attributes>
                <mock:with-attribute name="doc:name" whereValue="#['Invoke Requestor API']"/>
            </mock:with-attributes>
            <mock:then-return payload="[{  &quot;apiSecretKey&quot;: &quot;eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ0&quot;,  &quot;partnerMetadata&quot;: {   &quot;api&quot;: &quot;avenue5residential_candidate_api_key&quot;,   &quot;companyId&quot;: &quot;qduaVfww&quot;,   &quot;sc&quot;: &quot;36d25595acdac7c7781ecfadce9c2ee7&quot;,   &quot;requestWflowstate&quot;: &quot;ESS Background Check&quot;,   &quot;statusWflowstate&quot;: &quot;ESS Background Check Status&quot;,   &quot;reportWflowstate&quot;: &quot;ESS Background Check Complete&quot;,   &quot;reportStatusKey&quot;: &quot;ESS Background Check Status&quot;,   &quot;reportUrlKey&quot;: &quot;ESS Background Check Result URL&quot;,   &quot;start&quot;: &quot;1&quot;,   &quot;count&quot;: &quot;50&quot;,   &quot;mappings&quot;: [{    &quot;customFieldLocation&quot;: &quot;application.job.customfield&quot;,    &quot;customFieldKey&quot;: &quot;ESS PackageID&quot;,    &quot;verocityApiFieldName&quot;: &quot;package.packageName&quot;   }]  },  &quot;requestorId&quot;: &quot;1ace18fecb234867a87c03b4d6387bb7&quot;,  &quot;verocityMetadata&quot;: {   &quot;cra&quot;: &quot;craName&quot;,   &quot;integratedPartner&quot;: &quot;Jobvite&quot;,   &quot;integratedPartnerId&quot;: 26,   &quot;mvpId&quot;: 59,   &quot;requestorId&quot;: 1388  } }, {  &quot;apiSecretKey&quot;: &quot;eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9&quot;,  &quot;partnerMetadata&quot;: {   &quot;api&quot;: &quot;avenue5residential_candidate_api_key&quot;,   &quot;companyId&quot;: &quot;qduaVfww&quot;,   &quot;sc&quot;: &quot;36d25595acdac7c7781ecfadce9c2ee7&quot;,   &quot;requestWflowstate&quot;: &quot;ESS Background Check&quot;,   &quot;statusWflowstate&quot;: &quot;ESS Background Check Status&quot;,   &quot;reportWflowstate&quot;: &quot;ESS Background Check Complete&quot;,   &quot;reportStatusKey&quot;: &quot;ESS Background Check Status&quot;,   &quot;reportUrlKey&quot;: &quot;ESS Background Check Result URL&quot;,   &quot;start&quot;: &quot;1&quot;,   &quot;count&quot;: &quot;50&quot;,   &quot;mappings&quot;: [{    &quot;customFieldLocation&quot;: &quot;application.job.customfield&quot;,    &quot;customFieldKey&quot;: &quot;ESS PackageID&quot;,    &quot;verocityApiFieldName&quot;: &quot;package.packageName&quot;   }]  },  &quot;requestorId&quot;: &quot;1ace18fecb234867a87c03b4d6387bb7&quot;,  &quot;verocityMetadata&quot;: {   &quot;cra&quot;: &quot;craName&quot;,   &quot;integratedPartner&quot;: &quot;Jobvite&quot;,   &quot;integratedPartnerId&quot;: 26,   &quot;mvpId&quot;: 59,   &quot;requestorId&quot;: 1388  } }]"/>
        </mock:when>
        <mock:when messageProcessor=".*:.*" doc:name="Mock">
            <mock:with-attributes>
                <mock:with-attribute name="doc:name" whereValue="#['Invoke Jobvite GET API']"/>
            </mock:with-attributes>
            <mock:then-return payload="{  &quot;candidates&quot;: [{    &quot;address&quot;: &quot;123 Market Street&quot;,    &quot;address2&quot;: &quot;&quot;,    &quot;application&quot;: {     &quot;customField&quot;: [],     &quot;eId&quot;: &quot;p3BhEjwn&quot;,     &quot;gender&quot;: &quot;Undefined&quot;,     &quot;hasArtifacts&quot;: true,     &quot;job&quot;: {      &quot;company&quot;: &quot;Avenue5 Residential&quot;,      &quot;customField&quot;: [{       &quot;fieldCode&quot;: &quot;ess_packageid_xbgcvfw8&quot;,       &quot;key&quot;: &quot;ESS PackageID&quot;,       &quot;value&quot;: &quot;Standard Package&quot;      }],      &quot;department&quot;: &quot;CO-31000 - Arvada Station&quot;,      &quot;eId&quot;: &quot;o3DV4fwp&quot;,      &quot;hiringManagers&quot;: [{       &quot;firstName&quot;: &quot;John&quot;,       &quot;lastName&quot;: &quot;Doe&quot;,       &quot;userId&quot;: &quot;skwe5hwV&quot;,       &quot;userName&quot;: &quot;jdoe@deverus.com&quot;      }],      &quot;jobType&quot;: &quot;Full-Time&quot;,      &quot;location&quot;: &quot;Arvada Station&quot;,      &quot;primaryHiringManager&quot;: {       &quot;firstName&quot;: &quot;John&quot;,       &quot;lastName&quot;: &quot;Doe&quot;,       &quot;userId&quot;: &quot;skwe5hwV&quot;,       &quot;userName&quot;: &quot;jdoe@deverus.com&quot;      },      &quot;requisitionId&quot;: &quot;97&quot;,      &quot;subsidiaryId&quot;: &quot;fnV9Vfw6&quot;,      &quot;title&quot;: &quot;Assistant Maintenance Supervisor | Arvada Station&quot;     },     &quot;jobviteChannel&quot;: &quot;Email&quot;,     &quot;lastUpdatedDate&quot;: 1490732480643,     &quot;race&quot;: &quot;Undefined&quot;,     &quot;resume&quot;: {      &quot;content&quot;: &quot;None&quot;,      &quot;format&quot;: &quot;Text&quot;,      &quot;name&quot;: &quot;ExResume.docx&quot;     },     &quot;sentDate&quot;: 1490726774140,     &quot;source&quot;: &quot;Fred Flintstone&quot;,     &quot;sourceType&quot;: &quot;Recruiter&quot;,     &quot;veteranStatus&quot;: &quot;Undefined&quot;,     &quot;workflowState&quot;: &quot;Background Check in Process&quot;    },    &quot;city&quot;: &quot;San Francisco&quot;,    &quot;companyName&quot;: &quot;&quot;,    &quot;country&quot;: &quot;USA&quot;,    &quot;countryCode&quot;: &quot;USA&quot;,    &quot;countryName&quot;: &quot;United States&quot;,    &quot;eId&quot;: &quot;ex6vsiwn&quot;,    &quot;email&quot;: &quot;duck@example.com&quot;,    &quot;firstName&quot;: &quot;Daffy&quot;,    &quot;homePhone&quot;: &quot;+1 999-999-9999&quot;,    &quot;lastName&quot;: &quot;Duck (TEST)&quot;,    &quot;location&quot;: &quot;San Francisco, California United States&quot;,    &quot;mobile&quot;: &quot;+1 999-999-9999&quot;,    &quot;postalCode&quot;: &quot;94122&quot;,    &quot;state&quot;: &quot;California&quot;,    &quot;stateCode&quot;: &quot;CA&quot;,    &quot;stateName&quot;: &quot;California&quot;,    &quot;title&quot;: &quot;&quot;,    &quot;workPhone&quot;: &quot;&quot;,    &quot;workStatus&quot;: &quot;None&quot;   },   {    &quot;address&quot;: &quot;999 Broadway&quot;,    &quot;address2&quot;: &quot;&quot;,    &quot;application&quot;: {     &quot;customField&quot;: [],     &quot;eId&quot;: &quot;p3BhEjwn&quot;,     &quot;gender&quot;: &quot;Undefined&quot;,     &quot;hasArtifacts&quot;: true,     &quot;job&quot;: {      &quot;company&quot;: &quot;Avenue5 Residential&quot;,      &quot;customField&quot;: [{       &quot;fieldCode&quot;: &quot;ess_packageid_xbgcvfw8&quot;,       &quot;key&quot;: &quot;ESS PackageID&quot;,       &quot;value&quot;: &quot;Standard Package&quot;      }],      &quot;department&quot;: &quot;CO-31009 - Midtown Station&quot;,      &quot;eId&quot;: &quot;tnFJ876&quot;,      &quot;hiringManagers&quot;: [{       &quot;firstName&quot;: &quot;Ben&quot;,       &quot;lastName&quot;: &quot;Bear&quot;,       &quot;userId&quot;: &quot;zzzzzz&quot;,       &quot;userName&quot;: &quot;bbear@deverus.com&quot;      }],      &quot;jobType&quot;: &quot;Full-Time&quot;,      &quot;location&quot;: &quot;Midtown Station&quot;,      &quot;primaryHiringManager&quot;: {       &quot;firstName&quot;: &quot;Ben&quot;,       &quot;lastName&quot;: &quot;Bear&quot;,       &quot;userId&quot;: &quot;zzzzzzz&quot;,       &quot;userName&quot;: &quot;jdoe@deverus.com&quot;      },      &quot;requisitionId&quot;: &quot;97&quot;,      &quot;subsidiaryId&quot;: &quot;fnV9Vfw6&quot;,      &quot;title&quot;: &quot;Assistant Maintenance Supervisor | Midtown Station&quot;     },     &quot;jobviteChannel&quot;: &quot;Email&quot;,     &quot;lastUpdatedDate&quot;: 1490732480643,     &quot;race&quot;: &quot;Undefined&quot;,     &quot;resume&quot;: {      &quot;content&quot;: &quot;None&quot;,      &quot;format&quot;: &quot;Text&quot;,      &quot;name&quot;: &quot;ExResume.docx&quot;     },     &quot;sentDate&quot;: 1490726774140,     &quot;source&quot;: &quot;Wilma Flintstone&quot;,     &quot;sourceType&quot;: &quot;Recruiter&quot;,     &quot;veteranStatus&quot;: &quot;Undefined&quot;,     &quot;workflowState&quot;: &quot;Background Check in Process&quot;    },    &quot;city&quot;: &quot;San Francisco&quot;,    &quot;companyName&quot;: &quot;&quot;,    &quot;country&quot;: &quot;USA&quot;,    &quot;countryCode&quot;: &quot;USA&quot;,    &quot;countryName&quot;: &quot;United States&quot;,    &quot;eId&quot;: &quot;p3BhEjwn&quot;,    &quot;email&quot;: &quot;mmouse@example.com&quot;,    &quot;firstName&quot;: &quot;Mickey&quot;,    &quot;homePhone&quot;: &quot;+1 999-999-9999&quot;,    &quot;lastName&quot;: &quot;Mouse (TEST)&quot;,    &quot;location&quot;: &quot;San Francisco, California United States&quot;,    &quot;mobile&quot;: &quot;+1 999-999-9999&quot;,    &quot;postalCode&quot;: &quot;94122&quot;,    &quot;state&quot;: &quot;California&quot;,    &quot;stateCode&quot;: &quot;CA&quot;,    &quot;stateName&quot;: &quot;California&quot;,    &quot;title&quot;: &quot;&quot;,    &quot;workPhone&quot;: &quot;&quot;,    &quot;workStatus&quot;: &quot;None&quot;   }  ],  &quot;total&quot;: 1,  &quot;status&quot;: {   &quot;code&quot;: 200,   &quot;messages&quot;: []  } }"/>
        </mock:when>
        <mock:when messageProcessor=".*:.*" doc:name="Mock">
            <mock:with-attributes>
                <mock:with-attribute name="doc:name" whereValue="#['Invoke Verocity POST API']"/>
            </mock:with-attributes>
            <mock:then-return payload="{ &quot;status&quot;:&quot;success&quot; }"/>
        </mock:when>
    
        <flow-ref name="InvokeRequestorAPI" doc:name="InvokeRequestorAPI"/>
        <munit:assert-not-null message="Failed to execute jobvite-scheduler-incoming-test Failure Flow test case" doc:name="Assert Not Null Payload"/>
    </munit:test>
</mule>
