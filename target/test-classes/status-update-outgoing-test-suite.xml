<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:mock="http://www.mulesoft.org/schema/mule/mock" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:munit="http://www.mulesoft.org/schema/mule/munit" xmlns:spring="http://www.springframework.org/schema/beans" xmlns:core="http://www.mulesoft.org/schema/mule/core" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/mock http://www.mulesoft.org/schema/mule/mock/current/mule-mock.xsd">
    <munit:config name="munit" doc:name="MUnit configuration"/>
    <spring:beans>
        <spring:import resource="classpath:outbound/status-update-outgoing.xml"/>
        <spring:import resource="classpath:config/app-config.xml"/>
        <spring:import resource="classpath:exception/process-errors.xml"/>
        
    </spring:beans>
    <munit:test name="status-update-outgoing-test-suite-status-update-outgoing-processingTest" description="Test">
        <mock:when messageProcessor=".*:.*" doc:name="Mock">
            <mock:with-attributes>
                <mock:with-attribute name="doc:name" whereValue="#['Invoke Jobvite Status Update API']"/>
            </mock:with-attributes>
            <mock:then-return payload="{ &quot;status&quot;:&quot;success&quot; }"/>
        </mock:when>
        <munit:set payload="#[]" doc:name="Set Message" mimeType="application/json">
            <munit:inbound-properties>
                <munit:inbound-property key="http.listener.path" value="/api/*"/>
                <munit:inbound-property key="http.method" value="POST"/>
                <munit:inbound-property key="http.query.params" value="size=0"/>
                <munit:inbound-property key="http.relative.path" value="/api/tempworks/statusupdate"/>
                <munit:inbound-property key="http.request.path" value="/api/tempworks/statusupdate"/>
                <munit:inbound-property key="http.request.uri" value="/api/tempworks/statusupdate"/>
                <munit:inbound-property key="http.uri.params" value="size = 0"/>
            </munit:inbound-properties>
        </munit:set> 

        <set-payload value="{ &quot;reportId&quot;: 124, &quot;reportUrl&quot;: &quot;https://verocity.deverus.com/mvp/login_form.cfm?viewreport=124&amp;usertype=client&quot;, &quot;status&quot;: &quot;Complete&quot;, &quot;decision&quot;: &quot;Adverse Findings&quot;, &quot;orderDate&quot;: &quot;June, 03 2008 09:47:00 -0500&quot;, &quot;completeDate&quot;: &quot;June, 03 2008 09:47:00 -0500&quot;, &quot;refId&quot;: &quot;ABCD12345&quot; }" mimeType="application/json" doc:name="Set Payload"/>
        <flow-ref name="status-update-outgoing-processing" doc:name="status-update-outgoing-processing"/>
        <munit:assert-on-equals message="Failed to execute status-update-outgoing-test Success Flow test case" expectedValue="{ &quot;status&quot;:&quot;success&quot; }" actualValue="#[payload]" doc:name="Assert Equals"/>
    </munit:test>
    <munit:test name="status-update-outgoing-test-suite-status-update-outgoing-failureTest" description="Test">
        <mock:when messageProcessor=".*:.*" doc:name="Mock">
            <mock:with-attributes>
                <mock:with-attribute name="doc:name" whereValue="#['Invoke Jobvite Status Update API']"/>
            </mock:with-attributes>
            <mock:then-return payload="{ &quot;status&quot;:&quot;success&quot; }"/>
        </mock:when>
        <munit:set payload="#[]" doc:name="Set Message" mimeType="application/json">
            <munit:inbound-properties>
                <munit:inbound-property key="http.listener.path" value="/api/*"/>
                <munit:inbound-property key="http.method" value="POST"/>
                <munit:inbound-property key="http.query.params" value="size=0"/>
                <munit:inbound-property key="http.relative.path" value="/api/tempworks/statusupdate"/>
                <munit:inbound-property key="http.request.path" value="/api/tempworks/statusupdate"/>
                <munit:inbound-property key="http.request.uri" value="/api/tempworks/statusupdate"/>
                <munit:inbound-property key="http.uri.params" value="size = 0"/>
            </munit:inbound-properties>
        </munit:set> 

        <set-payload value="{  &quot;reportUrl&quot;: &quot;https://verocity.deverus.com/mvp/login_form.cfm?viewreport=124&amp;usertype=client&quot;, &quot;status&quot;: &quot;Complete&quot;, &quot;decision&quot;: &quot;Adverse Findings&quot;, &quot;orderDate&quot;: &quot;June, 03 2008 09:47:00 -0500&quot;, &quot;completeDate&quot;: &quot;June, 03 2008 09:47:00 -0500&quot;, &quot;refId&quot;: &quot;ABCD12345&quot; }" mimeType="application/json" doc:name="Set Payload"/>
        <flow-ref name="status-update-outgoing-processing" doc:name="status-update-outgoing-processing"/>
        <munit:assert-not-null doc:name="Assert Not Null Payload"/>
    </munit:test>

</mule>
